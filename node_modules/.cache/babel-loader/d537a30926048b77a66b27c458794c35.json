{"ast":null,"code":"var _jsxFileName = \"/Users/steventran/Desktop/stevenelection/politian/src/main-component/LoginPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  const push = useNavigate();\n  const [value, setValue] = useState({\n    email: 'user@gmail.com',\n    password: '123456',\n    remember: false\n  });\n\n  const changeHandler = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n    validator.showMessages();\n  };\n\n  const rememberHandler = () => {\n    setValue({ ...value,\n      remember: !value.remember\n    });\n  };\n\n  const [validator] = React.useState(new SimpleReactValidator({\n    className: 'errorMessage'\n  }));\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    if (validator.allValid()) {\n      setValue({\n        email: '',\n        password: '',\n        remember: false\n      });\n      validator.hideMessages();\n      const userRegex = /^user+.*/gm;\n      const email = value.email;\n\n      if (email.match(userRegex)) {\n        toast.success('You successfully Login on Politian !');\n        push('/home');\n      }\n    } else {\n      validator.showMessages();\n      toast.error('Empty field is not allowed!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"loginWrapper\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sign in to your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitForm,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"inputOutline\",\n              fullWidth: true,\n              placeholder: \"E-mail\",\n              value: value.email,\n              variant: \"outlined\",\n              name: \"email\",\n              label: \"E-mail\",\n              InputLabelProps: {\n                shrink: true\n              },\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), validator.message('email', value.email, 'required|email')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"inputOutline\",\n              fullWidth: true,\n              placeholder: \"Password\",\n              value: value.password,\n              variant: \"outlined\",\n              name: \"password\",\n              type: \"password\",\n              label: \"Password\",\n              InputLabelProps: {\n                shrink: true\n              },\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), validator.message('password', value.password, 'required')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: \"formAction\",\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: value.remember,\n                  onChange: rememberHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 46\n                }, this),\n                label: \"Remember Me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/forgot-password\",\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"formFooter\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                className: \"cBtnTheme\",\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"loginWithSocial\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"facebook\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-facebook\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"twitter\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-twitter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"linkedin\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-linkedin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"noteHelp\",\n              children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/register\",\n                children: \"Create free account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shape-img\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fi flaticon-honeycomb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"rZwaoQLNONk9lvnmLnVOiwiSjTo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/steventran/Desktop/stevenelection/politian/src/main-component/LoginPage/index.js"],"names":["React","useState","Grid","SimpleReactValidator","toast","TextField","Button","FormControlLabel","Checkbox","Link","useNavigate","LoginPage","props","push","value","setValue","email","password","remember","changeHandler","e","target","name","validator","showMessages","rememberHandler","className","submitForm","preventDefault","allValid","hideMessages","userRegex","match","success","error","shrink","message"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {toast} from \"react-toastify\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nimport './style.scss';\r\n\r\n\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const push = useNavigate()\r\n\r\n    const [value, setValue] = useState({\r\n        email: 'user@gmail.com',\r\n        password: '123456',\r\n        remember: false,\r\n    });\r\n\r\n    const changeHandler = (e) => {\r\n        setValue({...value, [e.target.name]: e.target.value});\r\n        validator.showMessages();\r\n    };\r\n\r\n    const rememberHandler = () => {\r\n        setValue({...value, remember: !value.remember});\r\n    };\r\n\r\n    const [validator] = React.useState(new SimpleReactValidator({\r\n        className: 'errorMessage'\r\n    }));\r\n\r\n\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setValue({\r\n                email: '',\r\n                password: '',\r\n                remember: false\r\n            });\r\n            validator.hideMessages();\r\n\r\n            const userRegex = /^user+.*/gm;\r\n            const email = value.email;\r\n\r\n            if (email.match(userRegex)) {\r\n                toast.success('You successfully Login on Politian !');\r\n                push('/home');\r\n            }\r\n        } else {\r\n            validator.showMessages();\r\n            toast.error('Empty field is not allowed!');\r\n        }\r\n    };\r\n    return (\r\n        <Grid className=\"loginWrapper\">\r\n            <Grid className=\"loginForm\">\r\n                <h2>Sign In</h2>\r\n                <p>Sign in to your account</p>\r\n                <form onSubmit={submitForm}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"E-mail\"\r\n                                value={value.email}\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                label=\"E-mail\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('email', value.email, 'required|email')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"Password\"\r\n                                value={value.password}\r\n                                variant=\"outlined\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('password', value.password, 'required')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid className=\"formAction\">\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={value.remember} onChange={rememberHandler}/>}\r\n                                    label=\"Remember Me\"\r\n                                />\r\n                                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                            </Grid>\r\n                            <Grid className=\"formFooter\">\r\n                                <Button fullWidth className=\"cBtnTheme\" type=\"submit\">Login</Button>\r\n                            </Grid>\r\n                            <Grid className=\"loginWithSocial\">\r\n                                <Button className=\"facebook\"><i className=\"fa fa-facebook\"></i></Button>\r\n                                <Button className=\"twitter\"><i className=\"fa fa-twitter\"></i></Button>\r\n                                <Button className=\"linkedin\"><i className=\"fa fa-linkedin\"></i></Button>\r\n                            </Grid>\r\n                            <p className=\"noteHelp\">Don't have an account? <Link to=\"/register\">Create free account</Link>\r\n                            </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <div className=\"shape-img\">\r\n                    <i className=\"fi flaticon-honeycomb\"></i>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}