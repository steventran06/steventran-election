{"ast":null,"code":"var _jsxFileName = \"/Users/steventran/Desktop/stevenelection/politian/src/main-component/SignUpPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpPage = props => {\n  _s();\n\n  const push = useNavigate();\n  const [value, setValue] = useState({\n    email: '',\n    full_name: '',\n    password: '',\n    confirm_password: ''\n  });\n\n  const changeHandler = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n    validator.showMessages();\n  };\n\n  const [validator] = React.useState(new SimpleReactValidator({\n    className: 'errorMessage'\n  }));\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    if (validator.allValid()) {\n      setValue({\n        email: '',\n        full_name: '',\n        password: '',\n        confirm_password: ''\n      });\n      validator.hideMessages();\n      toast.success('Registration Complete successfully!');\n      push('/login');\n    } else {\n      validator.showMessages();\n      toast.error('Empty field is not allowed!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"loginWrapper\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Signup your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitForm,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"inputOutline\",\n              fullWidth: true,\n              placeholder: \"Full Name\",\n              value: value.full_name,\n              variant: \"outlined\",\n              name: \"full_name\",\n              label: \"Name\",\n              InputLabelProps: {\n                shrink: true\n              },\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), validator.message('full name', value.full_name, 'required|alpha')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"inputOutline\",\n              fullWidth: true,\n              placeholder: \"E-mail\",\n              value: value.email,\n              variant: \"outlined\",\n              name: \"email\",\n              label: \"E-mail\",\n              InputLabelProps: {\n                shrink: true\n              },\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), validator.message('email', value.email, 'required|email')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"inputOutline\",\n              fullWidth: true,\n              placeholder: \"Password\",\n              value: value.password,\n              variant: \"outlined\",\n              name: \"password\",\n              label: \"Password\",\n              InputLabelProps: {\n                shrink: true\n              },\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), validator.message('password', value.password, 'required')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"inputOutline\",\n              fullWidth: true,\n              placeholder: \"Confirm Password\",\n              value: value.password,\n              variant: \"outlined\",\n              name: \"confirm_password\",\n              label: \"Confirm Password\",\n              InputLabelProps: {\n                shrink: true\n              },\n              onBlur: e => changeHandler(e),\n              onChange: e => changeHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), validator.message('confirm password', value.confirm_password, `in:${value.password}`)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: \"formFooter\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                className: \"cBtn cBtnLarge cBtnTheme\",\n                type: \"submit\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"loginWithSocial\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"facebook\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-facebook\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"twitter\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-twitter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"linkedin\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-linkedin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"noteHelp\",\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Return to Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 78\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shape-img\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fi flaticon-honeycomb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUpPage, \"d7ii6bQqNsk+F6Q5UDnTcnEMvo0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUpPage;\nexport default SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["/Users/steventran/Desktop/stevenelection/politian/src/main-component/SignUpPage/index.js"],"names":["React","useState","Grid","SimpleReactValidator","toast","TextField","Button","Link","useNavigate","SignUpPage","props","push","value","setValue","email","full_name","password","confirm_password","changeHandler","e","target","name","validator","showMessages","className","submitForm","preventDefault","allValid","hideMessages","success","error","shrink","message"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {toast} from \"react-toastify\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\n\r\nimport './style.scss';\r\n\r\nconst SignUpPage = (props) => {\r\n\r\n    const push = useNavigate()\r\n\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n        full_name: '',\r\n        password: '',\r\n        confirm_password: '',\r\n    });\r\n\r\n    const changeHandler = (e) => {\r\n        setValue({...value, [e.target.name]: e.target.value});\r\n        validator.showMessages();\r\n    };\r\n\r\n    const [validator] = React.useState(new SimpleReactValidator({\r\n        className: 'errorMessage'\r\n    }));\r\n\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setValue({\r\n                email: '',\r\n                full_name: '',\r\n                password: '',\r\n                confirm_password: '',\r\n            });\r\n            validator.hideMessages();\r\n            toast.success('Registration Complete successfully!');\r\n            push('/login');\r\n        } else {\r\n            validator.showMessages();\r\n            toast.error('Empty field is not allowed!');\r\n        }\r\n    };\r\n    return (\r\n        <Grid className=\"loginWrapper\">\r\n\r\n            <Grid className=\"loginForm\">\r\n                <h2>Signup</h2>\r\n                <p>Signup your account</p>\r\n                <form onSubmit={submitForm}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"Full Name\"\r\n                                value={value.full_name}\r\n                                variant=\"outlined\"\r\n                                name=\"full_name\"\r\n                                label=\"Name\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('full name', value.full_name, 'required|alpha')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"E-mail\"\r\n                                value={value.email}\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                label=\"E-mail\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('email', value.email, 'required|email')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"Password\"\r\n                                value={value.password}\r\n                                variant=\"outlined\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('password', value.password, 'required')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"Confirm Password\"\r\n                                value={value.password}\r\n                                variant=\"outlined\"\r\n                                name=\"confirm_password\"\r\n                                label=\"Confirm Password\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('confirm password', value.confirm_password, `in:${value.password}`)}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid className=\"formFooter\">\r\n                                <Button fullWidth className=\"cBtn cBtnLarge cBtnTheme\" type=\"submit\">Sign Up</Button>\r\n                            </Grid>\r\n                            <Grid className=\"loginWithSocial\">\r\n                                <Button className=\"facebook\"><i className=\"fa fa-facebook\"></i></Button>\r\n                                <Button className=\"twitter\"><i className=\"fa fa-twitter\"></i></Button>\r\n                                <Button className=\"linkedin\"><i className=\"fa fa-linkedin\"></i></Button>\r\n                            </Grid>\r\n                            <p className=\"noteHelp\">Already have an account? <Link to=\"/login\">Return to Sign In</Link>\r\n                            </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <div className=\"shape-img\">\r\n                    <i className=\"fi flaticon-honeycomb\"></i>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default SignUpPage;"]},"metadata":{},"sourceType":"module"}