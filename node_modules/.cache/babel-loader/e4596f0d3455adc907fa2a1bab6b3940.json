{"ast":null,"code":"import { ADD_TO_CART, DECREMENT_QUANTITY, INCREMENT_QUANTITY, REMOVE_FROM_CART } from \"../actions/type\";\nimport { minValueOne } from \"../../utils\";\nconst init = {\n  cart: []\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      const productId = action.product.id;\n      const productQty = action.qty ? action.qty : 1;\n\n      if (state.cart.findIndex(product => product.id === productId) !== -1) {\n        const cart = state.cart.reduce((cartAcc, product) => {\n          if (product.id === productId) {\n            cartAcc.push({ ...product,\n              selected_color: action.color,\n              selected_size: action.size,\n              qty: product.qty + productQty,\n              sum: product.price * product.discount / 100 * (product.qty + productQty)\n            }); // Increment qty\n          } else {\n            cartAcc.push(product);\n          }\n\n          return cartAcc;\n        }, []);\n        return { ...state,\n          cart\n        };\n      }\n\n      return { ...state,\n        cart: [...state.cart, { ...action.product,\n          selected_color: action.color,\n          selected_size: action.size,\n          qty: action.qty,\n          sum: action.product.price * action.product.discount / 100 * action.qty\n        }]\n      };\n\n    case REMOVE_FROM_CART:\n      return {\n        cart: state.cart.filter(item => item.id !== action.product_id)\n      };\n\n    case INCREMENT_QUANTITY:\n      const inc_productId = action.product_id;\n      const new_cart = state.cart.reduce((cartAcc, product) => {\n        if (product.id === inc_productId) {\n          cartAcc.push({ ...product,\n            qty: product.qty + 1\n          });\n        } else {\n          cartAcc.push(product);\n        }\n\n        return cartAcc;\n      }, []);\n      return { ...state,\n        cart: new_cart\n      };\n\n    case DECREMENT_QUANTITY:\n      const decProductId = action.product_id;\n      const decCart = state.cart.reduce((cartAcc, product) => {\n        if (product.id === decProductId) {\n          cartAcc.push({ ...product,\n            qty: minValueOne(product.qty - 1)\n          });\n        } else {\n          cartAcc.push(product);\n        }\n\n        return cartAcc;\n      }, []);\n      return { ...state,\n        cart: decCart\n      };\n\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"sources":["/Users/steventran/Desktop/stevenelection/politian/src/store/reducers/cart.js"],"names":["ADD_TO_CART","DECREMENT_QUANTITY","INCREMENT_QUANTITY","REMOVE_FROM_CART","minValueOne","init","cart","cartReducer","state","action","type","productId","product","id","productQty","qty","findIndex","reduce","cartAcc","push","selected_color","color","selected_size","size","sum","price","discount","filter","item","product_id","inc_productId","new_cart","decProductId","decCart"],"mappings":"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","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  DECREMENT_QUANTITY,\r\n  INCREMENT_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n} from \"../actions/type\";\r\nimport { minValueOne } from \"../../utils\";\r\n\r\nconst init = {\r\n  cart: [],\r\n};\r\n\r\nexport const cartReducer = (state = init, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const productId = action.product.id;\r\n      const productQty = action.qty ? action.qty : 1;\r\n      if (state.cart.findIndex((product) => product.id === productId) !== -1) {\r\n        const cart = state.cart.reduce((cartAcc, product) => {\r\n          if (product.id === productId) {\r\n            cartAcc.push({\r\n              ...product,\r\n              selected_color: action.color,\r\n              selected_size: action.size,\r\n              qty: product.qty + productQty,\r\n              sum:\r\n                ((product.price * product.discount) / 100) *\r\n                (product.qty + productQty),\r\n            }); // Increment qty\r\n          } else {\r\n            cartAcc.push(product);\r\n          }\r\n\r\n          return cartAcc;\r\n        }, []);\r\n\r\n        return { ...state, cart };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cart: [\r\n          ...state.cart,\r\n          {\r\n            ...action.product,\r\n            selected_color: action.color,\r\n            selected_size: action.size,\r\n            qty: action.qty,\r\n            sum:\r\n              ((action.product.price * action.product.discount) / 100) *\r\n              action.qty,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        cart: state.cart.filter((item) => item.id !== action.product_id),\r\n      };\r\n\r\n    case INCREMENT_QUANTITY:\r\n      const inc_productId = action.product_id;\r\n      const new_cart = state.cart.reduce((cartAcc, product) => {\r\n        if (product.id === inc_productId) {\r\n          cartAcc.push({\r\n            ...product,\r\n            qty: product.qty + 1,\r\n          });\r\n        } else {\r\n          cartAcc.push(product);\r\n        }\r\n        return cartAcc;\r\n      }, []);\r\n      return { ...state, cart: new_cart };\r\n\r\n    case DECREMENT_QUANTITY:\r\n      const decProductId = action.product_id;\r\n      const decCart = state.cart.reduce((cartAcc, product) => {\r\n        if (product.id === decProductId) {\r\n          cartAcc.push({\r\n            ...product,\r\n            qty: minValueOne(product.qty - 1),\r\n          });\r\n        } else {\r\n          cartAcc.push(product);\r\n        }\r\n        return cartAcc;\r\n      }, []);\r\n\r\n      return { ...state, cart: decCart };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}